package com.greenhouse.sim;

import java.util.List;

import com.greenhouse.base.Message;
import com.greenhouse.controller.ContextComControllerImpl;
import com.greenhouse.controller.ContextCommunicationController;

public class TemperatureControllerTerminal {
	
	 	private ContextConsultaTemperatura consultor;
	    private ContextEnvioInfoTemperatura informante;
	    private ContextCommunicationController context;
	    private int frecRefrescoInfo;

	    public TemperatureControllerTerminal(){

	        frecRefrescoInfo=5;
	        context=new ContextComControllerImpl();
	        context.startMeeting();
	        
	        consultor=new ContextConsultaTemperatura(context);
	        informante=new ContextEnvioInfoTemperatura(context);
	    }


	     public List<Message> obtenerLecturasTerminales() {

	         List<Message> temperaturas=consultor.obtenerLecturasTerminales();
	         obtenerFrecuenciaPreferida(temperaturas);

	         return temperaturas;
	     }

	     public Message obtenerLecturaLocal(){

	    	 Message dto = informante.obtenerLecturaLocal();
	         informante.enviarInformacion(dto,frecRefrescoInfo);
	         return dto;
	     }

	    
	    public int getFrecuenciaSeg() {
	        return frecRefrescoInfo;
	    }
	   
	    public void setFrecuenciaSeg(int frecuencaSecParam) {

	        if(frecuencaSecParam>0){
	           frecRefrescoInfo = frecuencaSecParam;           
	        }
	    }

	    private void obtenerFrecuenciaPreferida(List<Message> temperaturas){
	        
	        long timeStamp=0;

	        for(Message dto : temperaturas){

	            long timeStampTemporal=dto.getTimestamp();

	             if(timeStampTemporal>timeStamp){
	                 timeStamp=timeStampTemporal;
	                 setFrecuenciaSeg(dto.getFrequency());
	             }
	         }
	    }

	    public void cerrarConexionesTerminalesRemotas(){
	        context.endMeeting();
	    }

}
