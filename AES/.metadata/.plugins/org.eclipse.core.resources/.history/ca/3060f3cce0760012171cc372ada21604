package base;

public class MessageImpl implements Message{

	private static final long serialVersionUID = 1L;
	
		private String host;
	    private String alias;
	    private final double temperature;
	    private long timestamp;
	    private final int frequency;

	    public MessageImpl(final double temperature, final int frequency) {
	        this.temperature = temperature;
	        this.frequency = frequency;
	    }

	    public MessageImpl(final String host, final String alias, final double temperature, final long timestamp, final int frequency) {
	        this.host = ip;
	        this.temperature = temperature;
	        this.timestamp = timestamp;
	        this.frequency = frequency;
	    }

	    @Override
	    public String getHost() {
	        return host;
	    }

	    @Override
	    public String getAlias() {
	        return alias;
	    }

	    @Override
	    public double getTemperature() {
	        return temperature;
	    }

	    @Override
	    public long getTimestamp() {
	        return timestamp;
	    }

	    @Override
	    public int getFrequency() {
	        return frequency;
	    }

	    @Override
	    public int compareTo(final Message mensaje) {
	        if (mensaje == null) {
	            return 1;
	        }
	        return host.compareTo(mensaje.getHost());
	    }

	    @Override
	    public boolean equals(final Object obj) {
	        if (obj == null) {
	            return false;
	        }
	        if (getClass() != obj.getClass()) {
	            return false;
	        }
	        final MessageImpl other = (MessageImpl) obj;
	        if ((this.host == null) ? (other.host != null) : !this.host.equals(other.host)) {
	            return false;
	        }
	        return true;
	    }

	    @Override
	    public int hashCode() {
	        int hash = 7;
	        hash = 29 * hash + (this.host != null ? this.host.hashCode() : 0);
	        return hash;
	    }
}
