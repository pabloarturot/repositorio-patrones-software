package com.greenhouse.reciver;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;

import com.greenhouse.base.Message;
import com.greenhouse.controller.ControllerListener;
import com.greenhouse.util.MarshallingUtil;
import com.greenhouse.util.NetworkInfoUtil;



public class UDPReceiver implements Receiver{

		private boolean isAlive = true;
	    private final DatagramSocket socket;
	    private final ControllerListener listener;

	    public UDPReceiver(final ControllerListener listener) throws IOException {
	    	
	    	NetworkInfoUtil.getBundle();
		 	String serverHost = NetworkInfoUtil.getHost(NetworkInfoUtil.SERVER_HOST);
		 	Integer serverPort = NetworkInfoUtil.getPort(NetworkInfoUtil.SERVER_PORT);
		 	
	        this.listener = listener;
	        socket = new DatagramSocket(serverPort, InetAddress
                    .getByName(serverHost));
	    }

	    @Override
	    public void receive() {
		 	
	        while (isAlive) {
	            final DatagramPacket packet = new DatagramPacket(new byte[100], 100);

	            try {
	                socket.receive(packet);

	                Message message = MarshallingUtil.fromByteArray(packet.getData());

	                listener.notifyUDPMsg(message);
	            } catch (final Exception ex) {
	                System.out.println(ex);
	            }
	        }
	    }

	    @Override
	    public void end() {
	        isAlive = false;
	        socket.close();
	    }
}
